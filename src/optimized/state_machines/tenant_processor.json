{
  "Comment": "AVESA Tenant Processor - Handles all table processing for a single tenant",
  "StartAt": "DiscoverTenantTables",
  "States": {
    "DiscoverTenantTables": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:avesa-tenant-processor-${Environment}",
      "Parameters": {
        "tenant_config.$": "$.tenant_config",
        "job_id.$": "$.job_id",
        "table_name.$": "$.table_name",
        "force_full_sync.$": "$.force_full_sync"
      },
      "ResultPath": "$.table_discovery",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 5,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "TenantDiscoveryFailed",
          "ResultPath": "$.error"
        }
      ],
      "Next": "ValidateTableDiscovery"
    },
    
    "ValidateTableDiscovery": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.table_discovery.table_discovery.enabled_tables",
          "IsPresent": true,
          "Next": "CheckTableCount"
        }
      ],
      "Default": "NoTablesFound"
    },
    
    "CheckTableCount": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.table_discovery.table_discovery.table_count",
          "NumericGreaterThan": 0,
          "Next": "ParallelTableProcessing"
        }
      ],
      "Default": "NoTablesEnabled"
    },
    
    "ParallelTableProcessing": {
      "Type": "Map",
      "ItemsPath": "$.table_discovery.table_discovery.enabled_tables",
      "MaxConcurrency": 4,
      "Parameters": {
        "table_config.$": "$$.Map.Item.Value",
        "tenant_config.$": "$.tenant_config",
        "job_id.$": "$.job_id",
        "force_full_sync.$": "$.force_full_sync",
        "execution_id.$": "$.execution_id"
      },
      "Iterator": {
        "StartAt": "ProcessTable",
        "States": {
          "ProcessTable": {
            "Type": "Task",
            "Resource": "arn:aws:states:::states:startExecution.sync:2",
            "Parameters": {
              "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:TableProcessor-${Environment}",
              "Input": {
                "table_config.$": "$.table_config",
                "tenant_config.$": "$.tenant_config",
                "job_id.$": "$.job_id",
                "force_full_sync.$": "$.force_full_sync",
                "execution_id.$": "$.execution_id"
              }
            },
            "Retry": [
              {
                "ErrorEquals": ["States.ExecutionLimitExceeded"],
                "IntervalSeconds": 30,
                "MaxAttempts": 3,
                "BackoffRate": 2.0
              },
              {
                "ErrorEquals": ["States.TaskFailed"],
                "IntervalSeconds": 15,
                "MaxAttempts": 2,
                "BackoffRate": 2.0
              }
            ],
            "Catch": [
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "TableProcessingFailed",
                "ResultPath": "$.error"
              }
            ],
            "End": true
          },
          "TableProcessingFailed": {
            "Type": "Pass",
            "Parameters": {
              "table_name.$": "$.table_config.table_name",
              "tenant_id.$": "$.tenant_config.tenant_id",
              "status": "failed",
              "error.$": "$.error"
            },
            "End": true
          }
        }
      },
      "ResultPath": "$.table_results",
      "Next": "EvaluateTableResults"
    },
    
    "EvaluateTableResults": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:avesa-table-result-evaluator-${Environment}",
      "Parameters": {
        "tenant_id.$": "$.tenant_config.tenant_id",
        "job_id.$": "$.job_id",
        "table_results.$": "$.table_results"
      },
      "ResultPath": "$.evaluation",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 5,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        }
      ],
      "Next": "CheckCanonicalTransformTrigger"
    },
    
    "CheckCanonicalTransformTrigger": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.evaluation.should_trigger_canonical",
          "BooleanEquals": true,
          "Next": "TriggerCanonicalTransformation"
        }
      ],
      "Default": "TenantProcessingComplete"
    },
    
    "TriggerCanonicalTransformation": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:avesa-canonical-trigger-${Environment}",
      "Parameters": {
        "tenant_id.$": "$.tenant_config.tenant_id",
        "job_id.$": "$.job_id",
        "completed_tables.$": "$.evaluation.completed_tables"
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 10,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "CanonicalTransformFailed",
          "ResultPath": "$.canonical_error"
        }
      ],
      "Next": "TenantProcessingComplete"
    },
    
    "CanonicalTransformFailed": {
      "Type": "Pass",
      "Parameters": {
        "tenant_id.$": "$.tenant_config.tenant_id",
        "status": "completed_with_canonical_failure",
        "table_results.$": "$.table_results",
        "evaluation.$": "$.evaluation",
        "canonical_error.$": "$.canonical_error"
      },
      "End": true
    },
    
    "TenantProcessingComplete": {
      "Type": "Pass",
      "Parameters": {
        "tenant_id.$": "$.tenant_config.tenant_id",
        "status": "completed",
        "table_results.$": "$.table_results",
        "evaluation.$": "$.evaluation"
      },
      "End": true
    },
    
    "NoTablesFound": {
      "Type": "Pass",
      "Parameters": {
        "tenant_id.$": "$.tenant_config.tenant_id",
        "status": "completed",
        "message": "No tables found for tenant",
        "table_count": 0
      },
      "End": true
    },
    
    "NoTablesEnabled": {
      "Type": "Pass",
      "Parameters": {
        "tenant_id.$": "$.tenant_config.tenant_id",
        "status": "completed",
        "message": "No tables enabled for processing",
        "table_count": 0
      },
      "End": true
    },
    
    "TenantDiscoveryFailed": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:avesa-error-handler-${Environment}",
      "Parameters": {
        "error_type": "tenant_discovery_failure",
        "tenant_id.$": "$.tenant_config.tenant_id",
        "job_id.$": "$.job_id",
        "error_details.$": "$.error"
      },
      "Next": "TenantProcessingFailed"
    },
    
    "TenantProcessingFailed": {
      "Type": "Fail",
      "Cause": "Tenant processing failed",
      "Error": "TenantProcessingFailure"
    }
  }
}